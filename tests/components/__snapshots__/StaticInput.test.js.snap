// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DatePicker /> should match snapshot 1`] = `
<View>
  <Text
    style={
      Object {
        "color": "#8A8F9E",
        "fontSize": 10,
        "textTransform": "uppercase",
      }
    }
  >
    Expiry Date (Optional)
  </Text>
  <RNGestureHandlerButton
    collapsable={false}
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    style={
      Array [
        Object {
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <View
      accessible={true}
      style={
        Object {
          "borderBottomColor": "#8A8F9E",
          "borderBottomWidth": 0.5,
          "color": "#161f3d",
          "fontSize": 15,
          "height": 40,
          "opacity": 1,
        }
      }
      testID="press"
    >
      <Text
        style={
          Array [
            Object {
              "borderBottomColor": "#8A8F9E",
              "borderBottomWidth": 0.5,
              "color": "#161f3d",
              "fontSize": 15,
              "height": 40,
            },
            Object {
              "marginTop": 10,
            },
          ]
        }
        testID="date"
      >
        
      </Text>
    </View>
  </RNGestureHandlerButton>
  <Modal
    animationType="none"
    hardwareAccelerated={false}
    isVisible={false}
    onHide={[Function]}
    transparent={true}
    visible={false}
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "black",
          "bottom": 0,
          "height": 1334,
          "left": 0,
          "opacity": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
          "width": 750,
        }
      }
    />
  </Modal>
</View>
`;

exports[`<StaticEmailInput /> should match snapshot 1`] = `
<View
  testID="wrapper"
>
  <Text
    style={
      Object {
        "color": "#8A8F9E",
        "fontSize": 10,
        "textTransform": "uppercase",
      }
    }
    testID="text"
  >
    abacaba
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    keyboardType="email-address"
    rejectResponderTermination={true}
    style={
      Object {
        "borderBottomColor": "#8A8F9E",
        "borderBottomWidth": 0.5,
        "color": "#161f3d",
        "fontSize": 15,
        "height": 40,
      }
    }
    testID="input"
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`<StaticInput /> should match snapshot 1`] = `
<View
  testID="wrapper"
>
  <Text
    style={
      Object {
        "color": "#8A8F9E",
        "fontSize": 10,
        "textTransform": "uppercase",
      }
    }
    testID="text"
  >
    abacaba
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    rejectResponderTermination={true}
    style={
      Object {
        "borderBottomColor": "#8A8F9E",
        "borderBottomWidth": 0.5,
        "color": "#161f3d",
        "fontSize": 15,
        "height": 40,
      }
    }
    testID="input"
    underlineColorAndroid="transparent"
  />
</View>
`;

exports[`<StaticPasswordInput /> should match snapshot 1`] = `
<View
  testID="wrapper"
>
  <Text
    style={
      Object {
        "color": "#8A8F9E",
        "fontSize": 10,
        "textTransform": "uppercase",
      }
    }
    testID="text"
  >
    Password
  </Text>
  <TextInput
    allowFontScaling={true}
    autoCapitalize="none"
    rejectResponderTermination={true}
    secureTextEntry={true}
    style={
      Object {
        "borderBottomColor": "#8A8F9E",
        "borderBottomWidth": 0.5,
        "color": "#161f3d",
        "fontSize": 15,
        "height": 40,
      }
    }
    testID="input"
    underlineColorAndroid="transparent"
  />
</View>
`;
